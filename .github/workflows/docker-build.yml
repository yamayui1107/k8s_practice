name: Build and push Docker images

on:
  push:
    branches: [ "main" ]
    paths:
      - 'docker/**'
      - 'src/**'
      - 'pom.xml'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_APP_NAME: todo-app
  IMAGE_WEB_NAME: todo-web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (app)
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_APP_NAME }}
          tags: |
            type=ref,event=branch,enable=true,priority=700
            type=sha,priority=600
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/app/Dockerfile
          push: true
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Extract metadata (web)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_WEB_NAME }}
          tags: |
            type=ref,event=branch,enable=true,priority=700
            type=sha,priority=600
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Update Kustomize newTag (dev)
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: |
          set -e
          OWNER=$(echo "$GITHUB_REPOSITORY_OWNER" | tr '[:upper:]' '[:lower:]')
          APP="ghcr.io/${OWNER}/todo-app"
          WEB="ghcr.io/${OWNER}/todo-web"

          if [[ "$GITHUB_REF" == refs/heads/main ]]; then
            IMAGE_TAG="sha-${GITHUB_SHA::7}"
          else
            IMAGE_TAG="${GITHUB_REF_NAME}"   # 例: v1.2.3
          fi

          # 環境変数としてエクスポート（これが重要）
          export OWNER APP WEB IMAGE_TAG

          curl -sSL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

          /usr/local/bin/yq -i '
            (.images[] | select(.name==env(APP))).newTag = strenv(IMAGE_TAG) |
            (.images[] | select(.name==env(WEB))).newTag = strenv(IMAGE_TAG)
          ' deploy/k8s/overlays/dev/kustomization.yaml

          echo "==== after update ===="
          grep -nE 'name:|newTag:' deploy/k8s/overlays/dev/kustomization.yaml || true

          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add deploy/k8s/overlays/dev/kustomization.yaml || true
          git diff --cached --quiet && echo "no changes" || git commit -m "ci: update dev newTag to ${IMAGE_TAG}"
          git push || true