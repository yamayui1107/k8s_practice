name: Build and push Docker images

on:
  push:
    branches: [ "main" ]
    paths:
      - 'docker/**'
      - 'src/**'
      - 'pom.xml'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_APP_NAME: todo-app
  IMAGE_WEB_NAME: todo-web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (app)
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_APP_NAME }}
          tags: |
            type=ref,event=branch,enable=true,priority=700
            type=sha,priority=600
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/app/Dockerfile
          push: true
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Extract metadata (web)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_WEB_NAME }}
          tags: |
            type=ref,event=branch,enable=true,priority=700
            type=sha,priority=600
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          context: docker/web
          file: docker/web/Dockerfile
          push: true
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64 